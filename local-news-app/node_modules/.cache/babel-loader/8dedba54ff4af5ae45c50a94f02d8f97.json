{"ast":null,"code":"var _jsxFileName = \"E:\\\\kaia.dev\\\\Softerware\\\\local-news-app\\\\src\\\\WeatherReport\\\\WeatherReport.js\";\nimport React from \"react\";\nimport \"./WeatherReport.css\";\n\nclass WeatherReport extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      error: null,\n      isLoaded: false,\n      woeid: 2471217,\n      items: []\n    };\n    this.getCoords = this.getCoords.bind(this);\n    this.getLocationFromCoords = this.getLocationFromCoords.bind(this);\n  }\n\n  componentDidMount() {\n    if (navigator.geolocation) {\n      navigator.geolocation.getCurrentPosition(this.getCoords);\n    }\n  }\n\n  getCoords(pos) {\n    this.setState({\n      latitude: pos.coords.latitude,\n      longitude: pos.coords.longitude\n    });\n    this.getLocationFromCoords();\n  }\n\n  getLocationFromCoords() {\n    fetch(\"https://cors-anywhere.herokuapp.com/https://www.metaweather.com/api/location/search/?lattlong=\" + this.state.latitude + \",\" + this.state.longitude).then(res => res.json()).then(result => console.log(result));\n    console.log(this.state.woeid);\n  }\n\n  render() {\n    if (this.state.weather !== undefined) {\n      var options = {\n        weekday: 'long',\n        month: 'long',\n        day: 'numeric'\n      };\n      let localDate = new Date(this.state.weather.time).toLocaleDateString(\"En-Us\", options);\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"weatherInfo\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"h1\", {\n        className: \"update\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 21\n        }\n      }, \"Your Local Weather Report\"), /*#__PURE__*/React.createElement(\"img\", {\n        style: {\n          width: 175,\n          height: 175\n        },\n        src: \"https://www.metaweather.com/static/img/weather/png/\" + this.state.weather.consolidated_weather[0].weather_state_abbr + \".png\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 21\n        }\n      }), /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 21\n        }\n      }, \"Hmmm... looks like \", this.state.weather.consolidated_weather[0].weather_state_name, \" in \", this.state.weather.title), /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 21\n        }\n      }, \"Current Tempature: \", Math.round(this.state.weather.consolidated_weather[0].the_temp * 9 / 5 + 32), \" Degrees, Farenheight\"), /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 21\n        }\n      }, \"As Of: \", localDate));\n    }\n\n    return /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 14\n      }\n    }, \"Loading your Weather\");\n  }\n\n}\n\nexport default WeatherReport; // fetch(\"https://cors-anywhere.herokuapp.com/https://www.metaweather.com/api/location/search/?lattlong=\" +coord.latitude + \",\" + coord.longitude)\n//fetch(\"https://cors-anywhere.herokuapp.com/https://www.metaweather.com/api/location/\" + this.state.woeid,{\n//     method: 'GET',\n//     headers: {\n//       'Accept': 'application/json',\n//       'Content-Type': 'application/json',\n//     },\n// })\n// .then(res => res.json())\n// .then(\n// (result) => {\n//   this.setState({\n//       weather: result\n//   });\n// },\n// (error) => {\n//     return <p>Loading your info....</p>\n// }\n// )","map":{"version":3,"sources":["E:/kaia.dev/Softerware/local-news-app/src/WeatherReport/WeatherReport.js"],"names":["React","WeatherReport","Component","constructor","props","state","error","isLoaded","woeid","items","getCoords","bind","getLocationFromCoords","componentDidMount","navigator","geolocation","getCurrentPosition","pos","setState","latitude","coords","longitude","fetch","then","res","json","result","console","log","render","weather","undefined","options","weekday","month","day","localDate","Date","time","toLocaleDateString","width","height","consolidated_weather","weather_state_abbr","weather_state_name","title","Math","round","the_temp"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport \"./WeatherReport.css\";\r\nclass WeatherReport extends React.Component{\r\n    constructor(props) {\r\n        super(props);\r\n        \r\n\r\n        this.state = {\r\n          error: null,\r\n          isLoaded: false,\r\n          woeid: 2471217,\r\n          items: [],\r\n        };\r\n        this.getCoords = this.getCoords.bind(this);\r\n        this.getLocationFromCoords = this.getLocationFromCoords.bind(this);\r\n      }\r\n\r\n    componentDidMount(){\r\n\r\n        if(navigator.geolocation){\r\n            navigator.geolocation.getCurrentPosition(this.getCoords);\r\n        }\r\n    \r\n\r\n        \r\n    }\r\n\r\n    getCoords(pos){\r\n        this.setState({\r\n            latitude: pos.coords.latitude,\r\n            longitude: pos.coords.longitude\r\n        })\r\n        this.getLocationFromCoords();\r\n    }\r\n    getLocationFromCoords(){\r\n        fetch(\"https://cors-anywhere.herokuapp.com/https://www.metaweather.com/api/location/search/?lattlong=\" +this.state.latitude + \",\" + this.state.longitude)\r\n        .then(res => res.json())\r\n        .then(result => console.log(result)\r\n        )\r\n        console.log(this.state.woeid)\r\n    }\r\n\r\n    render(){\r\n         if(this.state.weather !== undefined){\r\n            var options = { weekday: 'long', month: 'long', day: 'numeric' };\r\n             let localDate = new Date(this.state.weather.time).toLocaleDateString(\"En-Us\", options);\r\n    \r\n   \r\n            return(\r\n                <div className = \"weatherInfo\">\r\n                    <h1 className=\"update\">Your Local Weather Report</h1>\r\n                    <img style={{width: 175, height: 175}} src={\"https://www.metaweather.com/static/img/weather/png/\" + this.state.weather.consolidated_weather[0].weather_state_abbr + \".png\"} />\r\n                    <p >Hmmm... looks like {this.state.weather.consolidated_weather[0].weather_state_name} in {this.state.weather.title}</p>\r\n                    <p >Current Tempature: {Math.round(this.state.weather.consolidated_weather[0].the_temp * 9/5 + 32) } Degrees, Farenheight</p>\r\n                    <p >As Of: {localDate}</p>\r\n                </div>\r\n                \r\n                \r\n            )\r\n            \r\n         }\r\n         return(\r\n             <p>Loading your Weather</p>\r\n         )\r\n\r\n    }   \r\n\r\n}\r\n\r\nexport default WeatherReport;\r\n\r\n// fetch(\"https://cors-anywhere.herokuapp.com/https://www.metaweather.com/api/location/search/?lattlong=\" +coord.latitude + \",\" + coord.longitude)\r\n//fetch(\"https://cors-anywhere.herokuapp.com/https://www.metaweather.com/api/location/\" + this.state.woeid,{\r\n//     method: 'GET',\r\n//     headers: {\r\n//       'Accept': 'application/json',\r\n//       'Content-Type': 'application/json',\r\n//     },\r\n// })\r\n// .then(res => res.json())\r\n// .then(\r\n// (result) => {\r\n//   this.setState({\r\n//       weather: result\r\n//   });\r\n// },\r\n// (error) => {\r\n//     return <p>Loading your info....</p>\r\n// }\r\n// )"]},"metadata":{},"sourceType":"module"}