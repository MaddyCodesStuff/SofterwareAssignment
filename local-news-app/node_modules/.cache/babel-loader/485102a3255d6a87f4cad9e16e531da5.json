{"ast":null,"code":"var _jsxFileName = \"E:\\\\kaia.dev\\\\Softerware\\\\local-news-app\\\\src\\\\WeatherReport\\\\WeatherReport.js\";\nimport React from \"react\";\nimport \"./WeatherReport.css\";\n\nclass WeatherReport extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      error: null,\n      isLoaded: false,\n      items: []\n    };\n    this.getCoords = this.getCoords.bind(this);\n    this.getLocationFromCoords = this.getLocationFromCoords.bind(this);\n    this.getWeatherInfo = this.getWeatherInfo.bind(this);\n  }\n\n  componentDidMount() {\n    if (navigator.geolocation) {\n      navigator.geolocation.getCurrentPosition(this.getCoords);\n    } else {\n      this.setState = {\n        woeid: 2471217\n      };\n      this.getWeatherInfo();\n    }\n  }\n\n  getCoords(pos) {\n    this.setState({\n      latitude: pos.coords.latitude,\n      longitude: pos.coords.longitude\n    });\n    this.getLocationFromCoords();\n  }\n\n  getLocationFromCoords() {\n    fetch(\"https://cors-anywhere.herokuapp.com/https://www.metaweather.com/api/location/search/?lattlong=\" + this.state.latitude + \",\" + this.state.longitude).then(res => res.json()).then(result => this.setState = {\n      woeid: result[0].woeid\n    }).then(this.getWeatherInfo());\n  }\n\n  getWeatherInfo() {\n    if (this.state.woeid) {\n      fetch(\"https://cors-anywhere.herokuapp.com/https://www.metaweather.com/api/location/\" + this.state.woeid, {\n        method: 'GET',\n        headers: {\n          'Accept': 'application/json',\n          'Content-Type': 'application/json'\n        }\n      }).then(res => res.json()).then(result => {\n        this.setState({\n          weather: result\n        });\n      });\n    }\n  }\n\n  render() {\n    console.log(this.state.weather);\n\n    if (this.state.weather) {\n      var options = {\n        weekday: 'long',\n        month: 'long',\n        day: 'numeric'\n      };\n      let localDate = new Date(this.state.weather.time).toLocaleDateString(\"En-Us\", options);\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"weatherInfo\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"h1\", {\n        className: \"update\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 21\n        }\n      }, \"Your Local Weather Report\"), /*#__PURE__*/React.createElement(\"img\", {\n        style: {\n          width: 175,\n          height: 175\n        },\n        src: \"https://www.metaweather.com/static/img/weather/png/\" + this.state.weather.consolidated_weather[0].weather_state_abbr + \".png\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 21\n        }\n      }), /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 21\n        }\n      }, \"Hmmm... looks like \", this.state.weather.consolidated_weather[0].weather_state_name, \" in \", this.state.weather.title), /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 21\n        }\n      }, \"Current Tempature: \", Math.round(this.state.weather.consolidated_weather[0].the_temp * 9 / 5 + 32), \" Degrees, Farenheight\"), /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 21\n        }\n      }, \"As Of: \", localDate));\n    } else {\n      return /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 13\n        }\n      }, \"Loading your Weather\");\n    }\n  }\n\n}\n\nexport default WeatherReport; // fetch(\"https://cors-anywhere.herokuapp.com/https://www.metaweather.com/api/location/search/?lattlong=\" +coord.latitude + \",\" + coord.longitude)\n//fetch(\"https://cors-anywhere.herokuapp.com/https://www.metaweather.com/api/location/\" + this.state.woeid,{\n//     method: 'GET',\n//     headers: {\n//       'Accept': 'application/json',\n//       'Content-Type': 'application/json',\n//     },\n// })\n// .then(res => res.json())\n// .then(\n// (result) => {\n//   this.setState({\n//       weather: result\n//   });\n// },\n// (error) => {\n//     return <p>Loading your info....</p>\n// }\n// )","map":{"version":3,"sources":["E:/kaia.dev/Softerware/local-news-app/src/WeatherReport/WeatherReport.js"],"names":["React","WeatherReport","Component","constructor","props","state","error","isLoaded","items","getCoords","bind","getLocationFromCoords","getWeatherInfo","componentDidMount","navigator","geolocation","getCurrentPosition","setState","woeid","pos","latitude","coords","longitude","fetch","then","res","json","result","method","headers","weather","render","console","log","options","weekday","month","day","localDate","Date","time","toLocaleDateString","width","height","consolidated_weather","weather_state_abbr","weather_state_name","title","Math","round","the_temp"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport \"./WeatherReport.css\";\r\nclass WeatherReport extends React.Component{\r\n    constructor(props) {\r\n        super(props);\r\n        \r\n\r\n        this.state = {\r\n          error: null,\r\n          isLoaded: false,\r\n          items: [],\r\n        };\r\n        this.getCoords = this.getCoords.bind(this);\r\n        this.getLocationFromCoords = this.getLocationFromCoords.bind(this);\r\n        this.getWeatherInfo = this.getWeatherInfo.bind(this);\r\n      }\r\n\r\n    componentDidMount(){\r\n\r\n        if(navigator.geolocation){\r\n            navigator.geolocation.getCurrentPosition(this.getCoords);\r\n        }else{\r\n            this.setState = {\r\n                woeid : 2471217\r\n            }\r\n            this.getWeatherInfo();\r\n        }\r\n    \r\n\r\n        \r\n    }\r\n\r\n    getCoords(pos){\r\n        this.setState({\r\n            latitude: pos.coords.latitude,\r\n            longitude: pos.coords.longitude\r\n        })\r\n        this.getLocationFromCoords();\r\n    }\r\n     getLocationFromCoords(){\r\n        fetch(\"https://cors-anywhere.herokuapp.com/https://www.metaweather.com/api/location/search/?lattlong=\" +this.state.latitude + \",\" + this.state.longitude)\r\n        .then(res => res.json())\r\n        .then(result => this.setState = {\r\n            woeid : result[0].woeid\r\n        }).then(this.getWeatherInfo())\r\n\r\n        \r\n    }\r\n    getWeatherInfo(){\r\n        if(this.state.woeid){\r\n            fetch(\"https://cors-anywhere.herokuapp.com/https://www.metaweather.com/api/location/\" + this.state.woeid,{\r\n                method: 'GET',\r\n                headers: {\r\n                  'Accept': 'application/json',\r\n                  'Content-Type': 'application/json',\r\n                },\r\n            })\r\n            .then(res => res.json())\r\n            .then((result) => {\r\n                this.setState({\r\n                    weather: result\r\n                });\r\n            });\r\n\r\n        }\r\n    }\r\n\r\n    render(){\r\n        console.log(this.state.weather)\r\n       if(this.state.weather){\r\n        var options = { weekday: 'long', month: 'long', day: 'numeric' };\r\n            let localDate = new Date(this.state.weather.time).toLocaleDateString(\"En-Us\", options);\r\n            return(\r\n                <div className = \"weatherInfo\">\r\n                    <h1 className=\"update\">Your Local Weather Report</h1>\r\n                    <img style={{width: 175, height: 175}} src={\"https://www.metaweather.com/static/img/weather/png/\" + this.state.weather.consolidated_weather[0].weather_state_abbr + \".png\"} />\r\n                    <p >Hmmm... looks like {this.state.weather.consolidated_weather[0].weather_state_name} in {this.state.weather.title}</p>\r\n                    <p >Current Tempature: {Math.round(this.state.weather.consolidated_weather[0].the_temp * 9/5 + 32) } Degrees, Farenheight</p>\r\n                    <p >As Of: {localDate}</p>\r\n                </div>    \r\n            )\r\n       }else{\r\n        return(\r\n            <p>Loading your Weather</p>\r\n        )\r\n       }\r\n    }   \r\n\r\n}\r\n\r\nexport default WeatherReport;\r\n\r\n// fetch(\"https://cors-anywhere.herokuapp.com/https://www.metaweather.com/api/location/search/?lattlong=\" +coord.latitude + \",\" + coord.longitude)\r\n//fetch(\"https://cors-anywhere.herokuapp.com/https://www.metaweather.com/api/location/\" + this.state.woeid,{\r\n//     method: 'GET',\r\n//     headers: {\r\n//       'Accept': 'application/json',\r\n//       'Content-Type': 'application/json',\r\n//     },\r\n// })\r\n// .then(res => res.json())\r\n// .then(\r\n// (result) => {\r\n//   this.setState({\r\n//       weather: result\r\n//   });\r\n// },\r\n// (error) => {\r\n//     return <p>Loading your info....</p>\r\n// }\r\n// )"]},"metadata":{},"sourceType":"module"}