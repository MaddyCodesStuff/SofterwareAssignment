{"ast":null,"code":"var _jsxFileName = \"E:\\\\kaia.dev\\\\Softerware\\\\local-news-app\\\\src\\\\WeatherReport\\\\WeatherReport.js\";\nimport React from \"react\";\nimport \"./WeatherReport.css\";\n\nclass WeatherReport extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      error: null,\n      isLoaded: false,\n      items: []\n    };\n  }\n\n  componentDidMount() {\n    navigator.geolocation.getCurrentPosition(positionSuccess);\n    let loc = 2471217;\n\n    function positionSuccess(params) {\n      let coord = params.coords;\n      fetch(\"https://cors-anywhere.herokuapp.com/https://www.metaweather.com/api/location/search/?lattlong=\" + coord.latitude + \",\" + coord.longitude).then(res => res.json).then(result => {\n        return coord = result.woeid;\n      });\n    }\n\n    fetch(\"https://cors-anywhere.herokuapp.com/https://www.metaweather.com/api/location/\" + loc, {\n      method: 'GET',\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json'\n      }\n    }).then(res => res.json()).then(result => {\n      this.setState({\n        weather: result\n      });\n    }, error => {\n      return /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 24\n        }\n      }, \"Loading your info....\");\n    });\n  }\n\n  render() {\n    if (this.state.weather !== undefined) {\n      var options = {\n        weekday: 'long',\n        month: 'long',\n        day: 'numeric'\n      };\n      let localDate = new Date(this.state.weather.time).toLocaleDateString(\"En-Us\", options);\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"weatherInfo\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"h1\", {\n        className: \"update\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 21\n        }\n      }, \"Your Local Weather Report\"), /*#__PURE__*/React.createElement(\"img\", {\n        style: {\n          width: 175,\n          height: 175\n        },\n        src: \"https://cors-anywhere.herokuapp.com/https://www.metaweather.com/static/img/weather/png/\" + this.state.weather.consolidated_weather[0].weather_state_abbr + \".png\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 21\n        }\n      }), /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 21\n        }\n      }, \"Hmmm... looks like \", this.state.weather.consolidated_weather[0].weather_state_name, \" in \", this.state.weather.title), /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 21\n        }\n      }, \"Current Tempature: \", Math.round(this.state.weather.consolidated_weather[0].the_temp * 9 / 5 + 32), \" Degrees, Farenheight\"), /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 21\n        }\n      }, \"As Of: \", localDate));\n    }\n\n    return /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 14\n      }\n    }, \"Loading your Weather\");\n  }\n\n}\n\nfunction positionSuccess(params) {}\n\nexport default WeatherReport;","map":{"version":3,"sources":["E:/kaia.dev/Softerware/local-news-app/src/WeatherReport/WeatherReport.js"],"names":["React","WeatherReport","Component","constructor","props","state","error","isLoaded","items","componentDidMount","navigator","geolocation","getCurrentPosition","positionSuccess","loc","params","coord","coords","fetch","latitude","longitude","then","res","json","result","woeid","method","headers","setState","weather","render","undefined","options","weekday","month","day","localDate","Date","time","toLocaleDateString","width","height","consolidated_weather","weather_state_abbr","weather_state_name","title","Math","round","the_temp"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport \"./WeatherReport.css\";\r\nclass WeatherReport extends React.Component{\r\n    constructor(props) {\r\n        super(props);\r\n        \r\n\r\n        this.state = {\r\n          error: null,\r\n          isLoaded: false,\r\n          items: [],\r\n        };\r\n\r\n      }\r\n    componentDidMount(){\r\n\r\n        navigator.geolocation.getCurrentPosition(positionSuccess);\r\n        let loc = 2471217;\r\n        function positionSuccess(params) {\r\n\r\n            let coord = params.coords;\r\n            fetch(\"https://cors-anywhere.herokuapp.com/https://www.metaweather.com/api/location/search/?lattlong=\" +coord.latitude + \",\" + coord.longitude)\r\n            .then(res => res.json)\r\n            .then(\r\n                (result) =>{\r\n                    return coord = result.woeid\r\n                }\r\n            )\r\n        }\r\n\r\n        fetch(\"https://cors-anywhere.herokuapp.com/https://www.metaweather.com/api/location/\" + loc,{\r\n                method: 'GET',\r\n                headers: {\r\n                  'Accept': 'application/json',\r\n                  'Content-Type': 'application/json',\r\n                },\r\n        })\r\n          .then(res => res.json())\r\n          .then(\r\n            (result) => {\r\n              this.setState({\r\n                  weather: result\r\n              });\r\n            },\r\n            (error) => {\r\n                return <p>Loading your info....</p>\r\n            }\r\n        )\r\n    }\r\n    render(){\r\n         if(this.state.weather !== undefined){\r\n            var options = { weekday: 'long', month: 'long', day: 'numeric' };\r\n             let localDate = new Date(this.state.weather.time).toLocaleDateString(\"En-Us\", options);\r\n    \r\n   \r\n            return(\r\n                <div className = \"weatherInfo\">\r\n                    <h1 className=\"update\">Your Local Weather Report</h1>\r\n                    <img style={{width: 175, height: 175}} src={\"https://cors-anywhere.herokuapp.com/https://www.metaweather.com/static/img/weather/png/\" + this.state.weather.consolidated_weather[0].weather_state_abbr + \".png\"} />\r\n                    <p >Hmmm... looks like {this.state.weather.consolidated_weather[0].weather_state_name} in {this.state.weather.title}</p>\r\n                    <p >Current Tempature: {Math.round(this.state.weather.consolidated_weather[0].the_temp * 9/5 + 32) } Degrees, Farenheight</p>\r\n                    <p >As Of: {localDate}</p>\r\n                </div>\r\n                \r\n                \r\n            )\r\n            \r\n         }\r\n         return(\r\n             <p>Loading your Weather</p>\r\n         )\r\n\r\n    }   \r\n\r\n}\r\nfunction positionSuccess(params) {\r\n    \r\n}\r\n\r\n\r\nexport default WeatherReport;\r\n\r\n"]},"metadata":{},"sourceType":"module"}